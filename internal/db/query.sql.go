// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: query.sql

package db

import (
	"context"
	"net/netip"
	"time"
)

const createAuth = `-- name: CreateAuth :one
INSERT INTO auths 
  (guid, refresh_token_hash, ip_address, user_agent, refreshed_at)
VALUES 
  ($1, $2, $3, $4, $5)
RETURNING id, guid, refresh_token_hash, ip_address, user_agent, refreshed_at, created_at
`

type CreateAuthParams struct {
	Guid             string     `json:"guid"`
	RefreshTokenHash string     `json:"refresh_token_hash"`
	IpAddress        netip.Addr `json:"ip_address"`
	UserAgent        string     `json:"user_agent"`
	RefreshedAt      time.Time  `json:"refreshed_at"`
}

func (q *Queries) CreateAuth(ctx context.Context, arg CreateAuthParams) (Auth, error) {
	row := q.db.QueryRow(ctx, createAuth,
		arg.Guid,
		arg.RefreshTokenHash,
		arg.IpAddress,
		arg.UserAgent,
		arg.RefreshedAt,
	)
	var i Auth
	err := row.Scan(
		&i.ID,
		&i.Guid,
		&i.RefreshTokenHash,
		&i.IpAddress,
		&i.UserAgent,
		&i.RefreshedAt,
		&i.CreatedAt,
	)
	return i, err
}
